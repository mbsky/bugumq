= BuguMQ的设计说明 =

== 服务器 ==

BuguMQ使用Redis作为MQ服务器。

== 客户端 ==

BuguMQ提供jar包作为java语言客户端。

== 消息协议 ==
BuguMQ使用Redis协议传输文本消息（即Java String类型）。在应用层，用户需要根据项目需求，制定自己的协议规范。

== 消息队列：Queue ==
 * Queue消息模型，采用生产者/消费者模式实现。
 * 同一个Queue，可以有多个消费者。Queue中的一个消息，如果被其中一个消费者消费掉了，那么其它的消费者不会接收到该消息。
 * 尽管Queue可以有多个消费者，但它更常用于一对一的消息通信。
 * Queue中的消息，是有顺序的，即FIFO（先进先出）。
 * Queue中的消息，默认是FIFO的。但可以发布一个紧急消息，它会被插入到队列的头部，被消费者立刻接收到。
 * Queue中的消息，可以持久保存。即使消费者不在线，等到它下次上线的时候，仍能接收到该消息。
 * Queue中的消息，默认是持久保存的，直到它被消费掉。但可以设置消息的有效期，如果在有效期内还没被消费，则会自动从队列中移除。
 

== 消息广播：Topic ==
 * Topic消息模型，采用发布/订阅模式实现。
 * 同一个Topic，可以有多个订阅者。当有消息发布到该Topic时，所有的订阅者都能接收到该消息。
 * 发布到Topic的消息，无法持久保存。只有在线的订阅者，才能接收到该消息。如果订阅者不在线，等到它下次上线的时候，仍然不会接收到该消息。
 * 支持按模式（Pattern）订阅广播，支持*和?等通配符。